{"version":3,"sources":["app/pages/BlockDetailsPage/components/BlockDetailsCard/index.js","app/pages/BlockDetailsPage/components/BlockDetailsTable/components/TableBodyRows.js","app/pages/BlockDetailsPage/components/BlockDetailsTable/index.js","app/pages/BlockDetailsPage/index.js","app/components/Empty/index.js","app/components/Pagination/index.js","app/components/Tab/Horizontal/Tabs.js","app/components/Tab/Horizontal/Tab.js","app/components/Tab/Horizontal/TabPanel.js","app/components/Tag/types.js","app/components/Tag/utils.js","constants/tableConfig.js","app/components/Tag/index.js","app/components/InfoRow/index.js","app/components/Tag/Action.js"],"names":["BlockDetailsCard","t","useTranslation","Wrapper","InfoRow","label","value","customValueComp","tw","div","TableBodyRows","item","Table","isLink","Action","type","Tag","color","BlockDetailsTable","data","isDataEmpty","length","blockDetailsTableHeader","map","i","Empty","Pagination","BlockDetailsPage","HeadWrapper","Heading","Text","containerStyles","total","itemRender","_","element","Tabs","Tab","children","onClick","labelStyles","props","useTabState","isActive","onChangeTab","className","styled","Button","css","TabPanel","isCard","usePanelState","Types","success","pending","default","processing","getColor","producerTableHeaders","epochTableHeaders","transactionTableHeader","blockTableHeader","GRC20TokenTableHeader","MinedBlocksTableHeader","transWithActionTableHeader","rest","bold","size","defaultProps","labelWrapStyles","Container","Content","isValidElement","cloneElement","LabelWrapper","TextBase"],"mappings":"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","file":"static/js/11.9f2ac087.chunk.js","sourcesContent":["import React from \"react\";\nimport tw from \"twin.macro\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport { TableContainer as Container } from \"src/app/components/Table\";\nimport { TabPanel as Card } from \"src/app/components/Tab/Horizontal\";\nimport { InfoRow } from \"src/app/components/InfoRow\";\nimport { Link } from \"src/app/components/Link\";\n\nexport function BlockDetailsCard() {\n  const { t } = useTranslation();\n\n  return (\n    <Container>\n      <Card>\n        <Wrapper>\n          <InfoRow label={t(\"blockDetails.block_height\")} value=\"11676248\" />\n\n          <InfoRow\n            label={t(\"common.timeStamp\")}\n            value=\"1 hr 14 mins ago (Jan-17-2021 03:30:52 PM +UTC) | Confirmed within\n          30 secs\"\n          />\n\n          <InfoRow label={t(\"common.transactions\")} value=\"200\" />\n\n          <InfoRow\n            label={t(\"blockDetails.mined_by\")}\n            customValueComp={\n              <Link tw=\"underline\">5A0b54D5dc17e0AadC3832sdsads55858</Link>\n            }\n          />\n\n          <InfoRow\n            label={t(\"blockDetails.block_reward\")}\n            value=\"3.105465374371711284 Ether (2 + 1.105465374371711284)\"\n          />\n\n          <InfoRow\n            label={t(\"common.difficulty\")}\n            value=\"4,153,661,732,410,000\"\n          />\n\n          <InfoRow\n            label={t(\"blockDetails.total_difficulty\")}\n            value=\"20,255,456,233,619,604,483,769\"\n          />\n\n          <InfoRow label={t(\"common.size\")} value=\"52,768 bytes\" />\n\n          <InfoRow\n            label={t(\"blockDetails.hash\")}\n            value=\"8854b325d7069805053399b6dba46612a54a98e872a2b45c6aaa3b3e2997d7c8\"\n          />\n        </Wrapper>\n      </Card>\n    </Container>\n  );\n}\n\nexport const Wrapper = tw.div`w-full px-1 py-3 lg:pl-6`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport { TableRow, TableCell } from \"src/app/components/Table\";\nimport { Tag } from \"src/app/components/Tag\";\nimport { Action } from \"src/app/components/Tag/Action\";\n\nexport function TableBodyRows({ item }) {\n  return (\n    <>\n      <TableRow>\n        <TableCell isLink>54agdt367dgt65656</TableCell>\n        <TableCell>01/12/2021</TableCell>\n        <TableCell>\n          <Action type=\"pending\">Send</Action>\n        </TableCell>\n        <TableCell isLink>54agdt367dgt65656</TableCell>\n        <TableCell isLink>54agdt367dgt65656</TableCell>\n        <TableCell>0.0005 GLCH</TableCell>\n        <TableCell>0.0005 GLCH</TableCell>\n        <TableCell>\n          <Tag color=\"pending\">Pending</Tag>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nTableBodyRows.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport \"twin.macro\";\nimport { blockDetailsTableHeader } from \"src/constants/tableConfig\";\n\n// Components\nimport {\n  Table,\n  TableContainer,\n  TableRow,\n  TableHeader,\n  TableHeaderCell,\n  TableBody,\n} from \"src/app/components/Table\";\nimport { TabPanel } from \"src/app/components/Tab/Horizontal\";\nimport { Empty } from \"src/app/components/Empty\";\nimport { Pagination } from \"src/app/components/Pagination\";\nimport { TableBodyRows } from \"./components\";\n\nexport function BlockDetailsTable({ data }) {\n  const isDataEmpty = !data?.length;\n\n  const renderHeaders = () => {\n    return blockDetailsTableHeader.map((item, i) => (\n      <TableHeaderCell key={`blockDetails-header-${i}`}>{item}</TableHeaderCell>\n    ));\n  };\n\n  const renderBodyRows = () => {\n    if (isDataEmpty) return <Empty />;\n\n    return data.map((item, i) => {\n      return <TableBodyRows item={item} key={`blockDetails-body-${i}`} />;\n    });\n  };\n\n  const renderPagination = () => {\n    if (isDataEmpty) return null;\n    return <Pagination />;\n  };\n\n  return (\n    <>\n      <TabPanel>\n        <TableContainer>\n          <Table>\n            <TableHeader>\n              <TableRow>{renderHeaders()}</TableRow>\n            </TableHeader>\n            <TableBody>{renderBodyRows()}</TableBody>\n          </Table>\n        </TableContainer>\n        {renderPagination()}\n      </TabPanel>\n    </>\n  );\n}\n","import React from \"react\";\nimport tw from \"twin.macro\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport { Text } from \"src/app/components/Text\";\nimport { BlockDetailsCard } from \"./components/BlockDetailsCard\";\nimport { BlockDetailsTable } from \"./components/BlockDetailsTable\";\n\nexport function BlockDetailsPage() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Wrapper>\n        <HeadWrapper>\n          <Heading>{t(\"blockDetails.title\")}</Heading>\n          <Heading tw=\"text-textSecondary! ml-4\">#111111</Heading>\n        </HeadWrapper>\n\n        <BlockDetailsCard />\n\n        <Heading tw=\"mt-8 lg:mt-12\">{t(\"blockDetails.title\")}</Heading>\n        <BlockDetailsTable data={[1, 2, 3]} />\n      </Wrapper>\n    </>\n  );\n}\n\nconst Wrapper = tw.div`mb-4`;\nconst HeadWrapper = tw.div`flex flex-wrap items-center`;\nconst Heading = tw(Text)`text-base lg:text-lg mb-5`;\n","import { React } from \"react\";\nimport tw from \"twin.macro\";\n\nexport function Empty() {\n  return <Wrapper></Wrapper>;\n}\n\nconst Wrapper = tw.div`p-10 items-center justify-center`;\n","import React from \"react\";\nimport RcPagination from \"rc-pagination\";\nimport { useTranslation } from \"react-i18next\";\nimport tw from \"twin.macro\";\nimport \"./styles/index.css\";\n\nexport const Pagination = ({ containerStyles }) => {\n  const { t } = useTranslation();\n\n  /**\n   *\n   *\n   */\n  const renderButtons = (_, type, element) => {\n    if (type === \"prev\") {\n      return <button type=\"button\">{t(\"pagination.prev\")}</button>;\n    }\n    if (type === \"next\") {\n      return <button type=\"button\">{t(\"pagination.next\")}</button>;\n    }\n    return element;\n  };\n\n  return (\n    <>\n      <Wrapper css={containerStyles}>\n        <RcPagination total={100} itemRender={renderButtons} />\n      </Wrapper>\n    </>\n  );\n};\n\nconst Wrapper = tw.div`\n flex \n mt-7\n mb-2\n items-center \n justify-start \n lg:justify-end \n w-full\n`;\n","import tw from \"twin.macro\";\nexport const Tabs = tw.div`grid grid-cols-4 gap-2 md:gap-6 mt-8`;\n","import React from \"react\";\nimport tw, { styled, css, theme } from \"twin.macro\";\nimport { Button } from \"../../Button\";\nimport { Text } from \"../../Text\";\nimport { useTabState } from \"../hooks/useTabState\";\n\nexport function Tab({ children, onClick, labelStyles, ...props }) {\n  const { isActive, onChangeTab } = useTabState();\n  return (\n    <Wrapper\n      isActive={isActive}\n      onClick={() => {\n        onChangeTab();\n        onClick && onClick();\n      }}\n      {...props}\n    >\n      <Text\n        className=\"tab-label\"\n        css={[\n          tw`text-sm md:text-tiny lg:text-base uppercase font-bold text-primary!`,\n          labelStyles,\n        ]}\n      >\n        {children}\n      </Text>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(Button)(({ isActive }) => [\n  tw`\n    w-full\n    py-3\n    lg:py-4\n  `,\n\n  css`\n    border-radius: 5px 5px 0px 0px;\n    background-color: ${theme`colors.bg6`};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-wrap: break-word;\n\n    .tab-label {\n      color: ${isActive ? \"white\" : theme`colors.primary`} !important;\n      opacity: ${isActive ? \"100%\" : \"60%\"};\n      word-break: inherit;\n    }\n  `,\n\n  isActive && tw`bg-gradient-to-r from-primary to-secondary text-white`,\n]);\n","import React from \"react\";\nimport { theme, styled, css } from \"twin.macro\";\nimport { usePanelState } from \"../hooks/usePanelState\";\n\nexport function TabPanel({ children, isCard, ...props }) {\n  const { isActive } = usePanelState();\n\n  if (!isCard && !isActive) return null;\n\n  return (\n    <Wrapper {...props}>\n      <div className=\"tab-panel\">\n        <div className=\"inner\">{children}</div>\n      </div>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div(() => [\n  css`\n    border-radius: 0 0px 5px 5px;\n    position: relative;\n    padding-left: 12px;\n    padding-right: 12px;\n    &:before {\n      content: \"\";\n      display: block;\n      width: 30px;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      background: ${theme`colors.secondary`};\n      opacity: 16%;\n      border-radius: 0 0px 5px 5px;\n    }\n    &:after {\n      content: \"\";\n      display: block;\n      width: 30px;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      background: ${theme`colors.primary`};\n      opacity: 30%;\n      border-radius: 0 0px 5px 5px;\n    }\n    .inner {\n      position: relative;\n      z-index: 2;\n      background-color: ${theme`colors.bgPrimary`};\n      padding: 20px;\n      border-radius: 0 0px 5px 5px;\n    }\n  `,\n]);\n","export const Types = {\n  success: \"success\",\n  pending: \"pending\",\n  default: \"default\",\n  processing: \"processing\",\n};\n","import { theme } from \"twin.macro\";\nimport { Types } from \"./types\";\n\nexport const getColor = (type) => {\n  if (type === Types.success) {\n    return theme`colors.success`;\n  }\n\n  if (type === Types.pending) {\n    return theme`colors.pending`;\n  }\n\n  if (type === Types.processing) {\n    return theme`colors.info`;\n  }\n\n  return theme`colors.success`;\n};\n","export const producerTableHeaders = [\n  \"Rank\",\n  \"Block Producer\",\n  \"Status\",\n  \"Vote\",\n  \"Total Vote\",\n  \"Total Rewards\",\n];\n\nexport const epochTableHeaders = [\n  \"Epoch\",\n  \"Slot\",\n  \"Block\",\n  \"Started at\",\n  \"Last block at\",\n  \"Transactions\",\n];\n\nexport const transactionTableHeader = [\n  \"Txn Hash\",\n  \"Block\",\n  \"Create At\",\n  \"From\",\n  \"To\",\n  \"Value (Glitch)\",\n  \"Txn Fee\",\n  \"Status\",\n];\n\nexport const blockTableHeader = [\n  \"Epoch/ Slot\",\n  \"Block\",\n  \"Create At\",\n  \"Reward (Glitch)\",\n  \"Size (Bytes)\",\n  \"Producer\",\n];\n\nexport const GRC20TokenTableHeader = [\n  \"Txn hash\",\n  \"Create at\",\n  \"Action\",\n  \"From\",\n  \"To\",\n  \"Txn Fee\",\n];\n\nexport const MinedBlocksTableHeader = [\n  \"Block\",\n  \"Create at\",\n  \"Transaction\",\n  \"Difficulty\",\n  \"Reward\",\n];\n\n// For user details page\nexport const transWithActionTableHeader = [\n  \"Txn Hash\",\n  \"Block\",\n  \"Create At\",\n  \"Action\",\n  \"From\",\n  \"To\",\n  \"Value (Glitch)\",\n  \"Txn Fee\",\n  \"Status\",\n];\n\nexport const blockDetailsTableHeader = [\n  \"Txn Hash\",\n  \"Create At\",\n  \"Action\",\n  \"From\",\n  \"To\",\n  \"Value (Glitch)\",\n  \"Txn Fee\",\n  \"Status\",\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw, { css, styled, theme } from \"twin.macro\";\nimport { Text } from \"../Text\";\nimport { getColor } from \"./utils\";\nimport { Types } from \"./types\";\n\nexport function Tag(props) {\n  const { children, color, ...rest } = props;\n  return (\n    <Wrapper color={color} {...rest}>\n      <Text bold size={theme`fontSize.sm`} tw=\"text-center\">\n        {children}\n      </Text>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div(({ color }) => [\n  tw`px-3 py-1 rounded items-center justify-center`,\n  css`\n    background-color: ${getColor(color)};\n  `,\n]);\n\nTag.propTypes = {\n  color: PropTypes.string,\n};\n\nTag.defaultProps = {\n  color: Types.default,\n};\n","import React, { cloneElement, isValidElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw from \"twin.macro\";\n\n// Components\nimport { InfoIcon } from \"src/app/components/Svg/Icons\";\nimport { Text as TextBase } from \"src/app/components/Text\";\n\nexport function InfoRow(props) {\n  const { label, labelWrapStyles, value, customValueComp, ...rest } = props;\n\n  const renderValue = () => {\n    if (isValidElement(customValueComp)) {\n      return cloneElement(customValueComp);\n    }\n\n    return <Text>{value}</Text>;\n  };\n\n  return (\n    <Container {...rest}>\n      <InfoIcon />\n      <Content className=\"info-row-content\">\n        <LabelWrapper css={[labelWrapStyles]}>\n          <Text tw=\"mb-1 lg:mb-0\">{label}:</Text>\n        </LabelWrapper>\n        {renderValue()}\n      </Content>\n    </Container>\n  );\n}\n\nconst Container = tw.div`mt-6 first:mt-0 flex w-full lg:items-center`;\nconst Content = tw.div`flex flex-col ml-2 lg:flex-grow lg:flex-row lg:ml-6`;\nconst LabelWrapper = tw.div`flex items-start lg:(items-center w-2/12)`;\nconst Text = tw(TextBase)`text-base text-textSecondary`;\n\nInfoRow.propTypes = {\n  label: PropTypes.string,\n  labelWrapStyles: PropTypes.any,\n  contentStyles: PropTypes.object,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  customValueComp: PropTypes.element,\n};\n","import { styled, css } from \"twin.macro\";\nimport { Text } from \"../Text\";\nimport { getColor } from \"./utils\";\n\nexport const Action = styled(Text)(({ type }) => [\n  css`\n    color: ${getColor(type)} !important;\n  `,\n]);\n"],"sourceRoot":""}