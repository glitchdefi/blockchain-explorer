{"version":3,"sources":["app/pages/TokenPage/components/TokenTable/config.js","app/pages/TokenPage/components/TokenTable/components/TableBodyRows.js","app/pages/TokenPage/components/TokenTable/index.js","app/pages/TokenPage/index.js","app/components/Table/TableContainer.js","app/components/Table/Table.js","app/components/Table/TableHeader.js","app/components/Table/TableHeaderCell.js","app/components/Table/TableBody.js","app/components/Table/TableRow.js","app/components/Table/TableCell.js","app/components/Tab/TabContainer.js","app/components/Empty/index.js","app/components/Pagination/index.js","app/components/Tab/Horizontal/Tabs.js","app/components/Tab/Horizontal/Tab.js","app/components/Tab/Horizontal/TabPanel.js","app/components/Tab/hooks/useTabState.js","app/components/Tab/hooks/usePanelState.js"],"names":["headerConfig","TableBodyRows","item","Table","css","TokenTable","data","isDataEmpty","length","map","i","Empty","Pagination","TokenPage","t","useTranslation","Wrapper","tw","div","TableContainer","children","props","tableStyles","TableHeader","TableHeaderCell","scope","styles","TableBody","TableRow","TableCell","isLink","href","CustomLink","Link","TabsContext","createContext","TabContainer","orientation","useState","activeTab","setActiveTab","Provider","value","tabIndex","panelIndex","styled","defaultProps","containerStyles","total","itemRender","_","type","element","Tabs","Tab","onClick","labelStyles","useTabState","isActive","onChangeTab","className","Button","TabPanel","isCard","usePanelState","tabsProps","useContext","useConstant","currentIndex","useMemo"],"mappings":"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","file":"static/js/15.b1795a43.chunk.js","sourcesContent":["export const headerConfig = [\n  \"#\",\n  \"Name\",\n  \"Marketcap (USD)\",\n  \"Price (USD)\",\n  \"Price (GLCH)\",\n  \"Change (24h)\",\n  \"Volume (USD)\",\n  \"Circulating Supply\",\n  \"Max Supply\"\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { css, theme } from \"twin.macro\";\n\n// Components\nimport { TableRow, TableCell } from \"src/app/components/Table\";\n\nexport function TableBodyRows({ item }) {\n  return (\n    <>\n      <TableRow>\n        <TableCell>1</TableCell>\n        <TableCell>Token 1</TableCell>\n        <TableCell>2,841,842,693.46</TableCell>\n        <TableCell>2.89</TableCell>\n        <TableCell>1,000,000</TableCell>\n        <TableCell>1,5%</TableCell>\n        <TableCell>1,000,000</TableCell>\n        <TableCell>1,000,000 TK1</TableCell>\n        <TableCell>1,000,000 TK1</TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nconst numberChangeStyles = css`\n  justify-content: center;\n  .number-change-value {\n    font-size: 13px;\n    color: ${theme`colors.white`};\n    opacity: 70%;\n  }\n`;\n\nTableBodyRows.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport \"twin.macro\";\nimport { headerConfig } from \"./config\";\n\n// Components\nimport {\n  Table,\n  TableContainer,\n  TableRow,\n  TableHeader,\n  TableHeaderCell,\n  TableBody,\n} from \"src/app/components/Table\";\nimport { TabPanel } from \"src/app/components/Tab/Horizontal\";\nimport { Empty } from \"src/app/components/Empty\";\nimport { Pagination } from \"src/app/components/Pagination\";\nimport { TableBodyRows } from \"./components\";\n\nexport function TokenTable({ data }) {\n  const isDataEmpty = !data?.length;\n\n  const renderHeaders = () => {\n    return headerConfig.map((item, i) => (\n      <TableHeaderCell key={i}>{item}</TableHeaderCell>\n    ));\n  };\n\n  const renderBodyRows = () => {\n    if (isDataEmpty) return <Empty />;\n\n    return data.map((item, i) => {\n      return <TableBodyRows item={item} key={i} />;\n    });\n  };\n\n  const renderPagination = () => {\n    if (isDataEmpty) return null;\n    return <Pagination />;\n  };\n\n  return (\n    <>\n      <TabPanel tw=\"mt-5\">\n        <TableContainer tw=\"mb-6\">\n          <Table>\n            <TableHeader>\n              <TableRow>{renderHeaders()}</TableRow>\n            </TableHeader>\n            <TableBody>{renderBodyRows()}</TableBody>\n          </Table>\n        </TableContainer>\n        {renderPagination()}\n      </TabPanel>\n    </>\n  );\n}\n","import React from \"react\";\nimport tw from \"twin.macro\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport { Text } from \"src/app/components/Text\";\nimport { TokenTable } from \"./components/TokenTable\";\n\nexport function TokenPage() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Wrapper>\n        <Text tw=\"text-lg\">{t(\"common.token\")}</Text>\n        <TokenTable data={[1, 2, 3]} />\n      </Wrapper>\n    </>\n  );\n}\n\nconst Wrapper = tw.div`mb-4`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"twin.macro\";\n\nexport default function TableContainer({ children, ...props }) {\n  return (\n    <div tw=\"block w-full overflow-x-auto\" {...props}>\n      {children}\n    </div>\n  );\n}\n\nTableContainer.propTypes = {\n  children: PropTypes.element,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw, { css } from \"twin.macro\";\n\nexport default function Table({ children, ...props }) {\n  return (\n    <table css={[tw`w-full bg-bgPrimary`, tableStyles]} {...props}>\n      {children}\n    </table>\n  );\n}\n\nconst tableStyles = css`\n  border-spacing: inherit;\n`;\n\nTable.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"twin.macro\";\n\nexport default function TableHeader({ children, ...props }) {\n  return (\n    <thead {...props}>\n      {children}\n    </thead>\n  );\n}\n\nTableHeader.propTypes = {\n  children: PropTypes.element,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw, { css } from \"twin.macro\";\n\nexport default function TableHeaderCell({ children, ...props }) {\n  return (\n    <th\n      scope=\"col\"\n      css={[\n        tw`p-4 text-center text-base font-medium text-white tracking-wider`,\n        styles,\n      ]}\n      {...props}\n    >\n      {children}\n    </th>\n  );\n}\n\nconst styles = css`\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  border-bottom-color: rgba(255, 255, 255, 0.4);\n`;\n\nTableHeaderCell.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"twin.macro\";\n\nexport default function TableBody({ children, ...props }) {\n  return (\n    <tbody tw=\"bg-bgPrimary\" {...props}>\n      {children}\n    </tbody>\n  );\n}\n\nTableBody.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function TableRow({ children, ...props }) {\n  return <tr {...props}>{children}</tr>;\n}\n\nTableRow.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw, { css, theme } from \"twin.macro\";\n\nimport { Link } from \"../Link\";\nexport default function TableCell({ children, isLink, href, ...props }) {\n  const getChildren = () => {\n    if (isLink) {\n      return <CustomLink>{children}</CustomLink>;\n    }\n    return children;\n  };\n\n  return (\n    <td\n      css={[tw`p-4 text-tiny text-center whitespace-nowrap`, styles]}\n      {...props}\n    >\n      {getChildren()}\n    </td>\n  );\n}\n\nconst styles = css`\n  color: ${theme`colors.textSecondary`};\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  border-bottom-color: rgba(255, 255, 255, 0.11);\n`;\n\nconst CustomLink = tw(Link)`text-textSecondary! whitespace-nowrap underline`;\nTableCell.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  isLink: PropTypes.bool,\n  href: PropTypes.string,\n};\n","import React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw, { styled } from \"twin.macro\";\n\nexport const TabsContext = createContext();\nexport function TabContainer({ children, orientation, ...props }) {\n  const [activeTab, setActiveTab] = useState(1);\n\n  return (\n    <TabsContext.Provider\n      value={{ tabIndex: 0, panelIndex: 0, activeTab, setActiveTab }}\n    >\n      <Wrapper orientation={orientation} {...props}>\n        {children}\n      </Wrapper>\n    </TabsContext.Provider>\n  );\n}\n\nconst Wrapper = styled.div(({ orientation }) => [\n  tw`block max-w-full`,\n  orientation === \"vertical\" && tw`lg:flex`,\n]);\n\nTabContainer.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n  orientation: PropTypes.string,\n};\n\nTabContainer.defaultProps = {\n  orientation: \"horizontal\",\n};\n","import { React } from \"react\";\nimport tw from \"twin.macro\";\n\nexport function Empty() {\n  return <Wrapper></Wrapper>;\n}\n\nconst Wrapper = tw.div`p-10 items-center justify-center`;\n","import React from \"react\";\nimport RcPagination from \"rc-pagination\";\nimport { useTranslation } from \"react-i18next\";\nimport tw from \"twin.macro\";\nimport \"./styles/index.css\";\n\nexport const Pagination = ({ containerStyles }) => {\n  const { t } = useTranslation();\n\n  /**\n   *\n   *\n   */\n  const renderButtons = (_, type, element) => {\n    if (type === \"prev\") {\n      return <button type=\"button\">{t(\"pagination.prev\")}</button>;\n    }\n    if (type === \"next\") {\n      return <button type=\"button\">{t(\"pagination.next\")}</button>;\n    }\n    return element;\n  };\n\n  return (\n    <>\n      <Wrapper css={containerStyles}>\n        <RcPagination total={100} itemRender={renderButtons} />\n      </Wrapper>\n    </>\n  );\n};\n\nconst Wrapper = tw.div`\n flex \n mt-7\n mb-2\n items-center \n justify-start \n lg:justify-end \n w-full\n`;\n","import tw from \"twin.macro\";\nexport const Tabs = tw.div`grid grid-cols-4 gap-2 md:gap-6 mt-8`;\n","import React from \"react\";\nimport tw, { styled, css, theme } from \"twin.macro\";\nimport { Button } from \"../../Button\";\nimport { Text } from \"../../Text\";\nimport { useTabState } from \"../hooks/useTabState\";\n\nexport function Tab({ children, onClick, labelStyles, ...props }) {\n  const { isActive, onChangeTab } = useTabState();\n  return (\n    <Wrapper\n      isActive={isActive}\n      onClick={() => {\n        onChangeTab();\n        onClick && onClick();\n      }}\n      {...props}\n    >\n      <Text\n        className=\"tab-label\"\n        css={[\n          tw`text-sm md:text-tiny lg:text-base uppercase font-bold text-primary!`,\n          labelStyles,\n        ]}\n      >\n        {children}\n      </Text>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(Button)(({ isActive }) => [\n  tw`\n    w-full\n    py-3\n    lg:py-4\n  `,\n\n  css`\n    border-radius: 5px 5px 0px 0px;\n    background-color: ${theme`colors.bg6`};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-wrap: break-word;\n\n    .tab-label {\n      color: ${isActive ? \"white\" : theme`colors.primary`} !important;\n      opacity: ${isActive ? \"100%\" : \"60%\"};\n      word-break: inherit;\n    }\n  `,\n\n  isActive && tw`bg-gradient-to-r from-primary to-secondary text-white`,\n]);\n","import React from \"react\";\nimport { theme, styled, css } from \"twin.macro\";\nimport { usePanelState } from \"../hooks/usePanelState\";\n\nexport function TabPanel({ children, isCard, ...props }) {\n  const { isActive } = usePanelState();\n\n  if (!isCard && !isActive) return null;\n\n  return (\n    <Wrapper {...props}>\n      <div className=\"tab-panel\">\n        <div className=\"inner\">{children}</div>\n      </div>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div(() => [\n  css`\n    border-radius: 0 0px 5px 5px;\n    position: relative;\n    padding-left: 12px;\n    padding-right: 12px;\n    &:before {\n      content: \"\";\n      display: block;\n      width: 30px;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      background: ${theme`colors.secondary`};\n      opacity: 16%;\n      border-radius: 0 0px 5px 5px;\n    }\n    &:after {\n      content: \"\";\n      display: block;\n      width: 30px;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      background: ${theme`colors.primary`};\n      opacity: 30%;\n      border-radius: 0 0px 5px 5px;\n    }\n    .inner {\n      position: relative;\n      z-index: 2;\n      background-color: ${theme`colors.bgPrimary`};\n      padding: 20px;\n      border-radius: 0 0px 5px 5px;\n    }\n  `,\n]);\n","import { useContext, useMemo } from \"react\";\nimport useConstant from \"use-constant\";\nimport { TabsContext } from \"../TabContainer\";\n\nexport function useTabState() {\n  const tabsProps = useContext(TabsContext);\n  const { activeTab, setActiveTab } = tabsProps;\n\n  const tabIndex = useConstant(() => {\n    const currentIndex = tabsProps.tabIndex;\n    tabsProps.tabIndex += 1;\n    return currentIndex;\n  });\n\n  const onChangeTab = useMemo(() => () => setActiveTab(tabIndex), []);\n\n  return {\n    isActive: activeTab === tabIndex,\n    onChangeTab,\n  };\n}\n","import { useContext } from \"react\";\nimport useConstant from \"use-constant\";\nimport { TabsContext } from \"../TabContainer\";\n\nexport const usePanelState = () => {\n  const tabsProps = useContext(TabsContext) || {};\n\n  const panelIndex = useConstant(() => {\n    const currentIndex = tabsProps.panelIndex;\n    tabsProps.panelIndex += 1;\n\n    return currentIndex;\n  });\n\n  return { isActive: panelIndex === tabsProps.activeTab };\n};\n"],"sourceRoot":""}