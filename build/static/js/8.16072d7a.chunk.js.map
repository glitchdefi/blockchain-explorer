{"version":3,"sources":["constants/walletTabConfig.js","app/pages/WalletPage/components/AccountManagement/PublicKey.js","app/pages/WalletPage/components/AccountManagement/index.js","app/components/Text/Heading.js","app/pages/WalletPage/components/Heading.js","app/pages/WalletPage/components/Text.js","app/pages/WalletPage/components/AssetManagement/InfoGlitchTokenCard.js","app/pages/WalletPage/components/AssetManagement/ValueTokenCard.js","app/pages/WalletPage/components/AssetManagement/TableBodyRows.js","app/pages/WalletPage/components/AssetManagement/TokenTransactionTable.js","app/pages/WalletPage/components/AssetManagement/index.js","app/pages/WalletPage/components/History/TokenButton.js","app/pages/WalletPage/components/History/AddTokenButton.js","app/pages/WalletPage/components/History/TransactionItem.js","app/pages/WalletPage/components/History/Transactions.js","app/pages/WalletPage/components/History/PendingCard.js","app/pages/WalletPage/components/History/HistoryCard.js","app/pages/WalletPage/components/History/index.js","app/components/LoadingIndicator/Spinner.js","app/pages/WalletPage/components/Wallets/WalletButton.js","app/pages/WalletPage/components/Wallets/index.js","app/pages/WalletPage/components/TabSections.js","app/pages/WalletPage/index.js","app/components/Empty/index.js","app/pages/WalletPage/components/CardLayout.js","app/components/Pagination/index.js","app/components/Tag/types.js","app/components/Tag/utils.js","app/components/Grid/index.js","app/components/Card/index.js","app/components/Tag/index.js","app/components/NumberChange.js","app/components/InfoRow/index.js","app/components/Avatar/index.js","app/components/Tab/Vertical/Tabs.js","app/components/Tab/Vertical/StyledTab.js","app/components/Tab/Vertical/Tab.js","app/components/Tab/Vertical/TabPanel.js"],"names":["walletTabConfig","icon","label","PublicKey","children","AccountManagement","t","useTranslation","Wrapper","customValueComp","styled","div","css","Heading","Text","tw","HeadingBase","TextBase","InfoGlitchTokenCard","CardLayout","Block","Label","ValueTokenCard","GridWrap","FlexLayout","Title","Value","NumberChange","value","diff","TableBodyRows","item","Table","Star","headerConfig","TokenTransactionTable","data","isDataEmpty","length","map","i","Empty","Pagination","AssetManagement","TokenButton","props","isActive","rest","className","Button","AddTokenButton","TransactionItem","transaction","StyledTransaction","src","width","color","Transactions","PendingCard","HistoryCard","History","Grid","cols","token","rotate","keyframes","StyledSVG","svg","size","stroke","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","WalletButton","pendingConnectorId","wallet","onClick","name","isPending","connectorId","StyledWalletButton","disabled","Wallets","useWalletAuth","active","account","login","logout","useState","setPendingConnectorId","SupportedWallets","key","href","TabSections","orientation","tab","tabIndex","leftIcon","WalletPage","CardBase","containerStyles","total","itemRender","_","type","element","Types","success","pending","default","processing","getColor","styles","container","colsVariants","2","3","4","Card","Tag","bold","defaultProps","isUp","InfoRow","labelWrapStyles","Container","Content","isValidElement","cloneElement","LabelWrapper","Avatar","alt","height","ImageLink","propTypes","PropTypes","string","isRequired","number","attrs","Tabs","StyledTab","tabStyles","activeColor","Tab","useTabState","onChangeTab","LeftIconWrapper","TabPanel","isCard","usePanelState"],"mappings":"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","file":"static/js/8.16072d7a.chunk.js","sourcesContent":["import {\n  AccManagementIcon,\n  AssetManagementIcon,\n  HistoryIcon,\n  WalletIcon,\n} from \"src/app/components/Svg/Icons\";\n\nexport const walletTabConfig = [\n  {\n    icon: <AccManagementIcon />,\n    label: \"Account Management\",\n  },\n  {\n    icon: <AssetManagementIcon />,\n    label: \"Asset Management\",\n  },\n  {\n    icon: <HistoryIcon />,\n    label: \"History\",\n  },\n  {\n    icon: <WalletIcon />,\n    label: \"Wallet\",\n  },\n];\n","import React from \"react\";\nimport \"twin.macro\";\n\n// Components\nimport { Text } from \"src/app/components/Text\";\nimport { Button } from \"src/app/components/Button\";\nimport { Copy24Icon } from \"src/app/components/Svg/Icons\";\n\nexport const PublicKey = ({ children }) => {\n  return (\n    <div tw=\"flex items-center\">\n      <Text tw=\"lg:break-normal\">{children}</Text>\n      <Button tw=\"p-0 ml-6 lg:ml-8\">\n        <Copy24Icon />\n      </Button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { css, styled } from \"twin.macro\";\n\n// Components\nimport { InfoRow } from \"src/app/components/InfoRow\";\nimport { PublicKey } from \"./PublicKey\";\n\nexport function AccountManagement() {\n  const { t } = useTranslation();\n\n  return (\n    <Wrapper>\n      <InfoRow\n        tw=\"items-start\"\n        label={t(\"walletPage.public_key\")}\n        customValueComp={\n          <PublicKey>\n            8854b325d7069805053399b6dba46612a54a98e872a2b45c6aaa3b3e2997d7c8\n          </PublicKey>\n        }\n      />\n\n      <InfoRow\n        tw=\"items-start\"\n        label={t(\"walletPage.public_key\")}\n        customValueComp={\n          <PublicKey>\n            8854b325d7069805053399b6dba46612a54a98e872a2b45c6aaa3b3e2997d7c8\n          </PublicKey>\n        }\n      />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div([\n  css`\n    @media (min-width: 1024px) {\n      padding: 20px 20px 20px 30px;\n    }\n\n    .info-row-content {\n      display: block;\n    }\n  `,\n]);\n","import tw, { styled } from \"twin.macro\";\nimport { Text } from \"./index\";\n\nexport const Heading = styled(Text)`text-lg font-bold`;\n","import tw from \"twin.macro\";\nimport { Heading as HeadingBase } from \"src/app/components/Text/Heading\";\n\nexport const Heading = tw(HeadingBase)`mb-4`;\n","import tw from \"twin.macro\";\nimport { Text as TextBase } from \"src/app/components/Text\";\n\nexport const Text = tw(TextBase)`text-textSecondary! text-tiny`;\n","import React from \"react\";\nimport tw from \"twin.macro\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport { Heading } from \"../Heading\";\nimport { CardLayout } from \"../CardLayout\";\nimport { Text as TextBase } from \"../Text\";\n\nexport function InfoGlitchTokenCard() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Heading>{t(\"common.glitch\")}</Heading>\n      <CardLayout>\n        <Block>\n          <Label>{t(\"walletPage.total_glitch_balance\")}:</Label>\n          <Text>julian1234abc</Text>\n        </Block>\n        <Block>\n          <Label>{t(\"walletPage.total_usd_value\")}:</Label>\n          <Text>1,671,306 Blocks</Text>\n        </Block>\n        <Block>\n          <Label>{t(\"walletPage.glitch_value\")}:</Label>\n          <Text>1,671,306 Blocks</Text>\n        </Block>\n      </CardLayout>\n    </>\n  );\n}\n\nconst Block = tw.div`my-2 lg:flex flex-wrap items-center w-full`;\nconst Text = tw(TextBase)`text-base`;\nconst Label = tw(Text)`w-full lg:w-1/3 mb-1 lg:mb-0`;\n","import React from \"react\";\nimport tw, { styled, css, theme } from \"twin.macro\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport { Heading } from \"../Heading\";\nimport { CardLayout } from \"../CardLayout\";\nimport { Text } from \"../Text\";\nimport { NumberChange } from \"src/app/components/NumberChange\";\n\nexport function ValueTokenCard() {\n  const { t } = useTranslation();\n\n  return (\n    <div tw=\"mt-10\">\n      <Heading>Token</Heading>\n      <CardLayout>\n        <GridWrap>\n          <FlexLayout>\n            <Title>{t(\"walletPage.value_in_glitch\")}</Title>\n            <Value>100,000</Value>\n          </FlexLayout>\n          <FlexLayout>\n            <Title>{t(\"walletPage.value_in_usd\")}</Title>\n            <NumberChange value=\"100,000\" diff={\"15%\"} />\n          </FlexLayout>\n        </GridWrap>\n      </CardLayout>\n    </div>\n  );\n}\n\nconst GridWrap = styled.div(() => [\n  tw`grid grid-cols-2 gap-4 w-full`,\n  css`\n    .number-change-value {\n      font-size: 18px;\n      font-weight: bold;\n      color: ${theme`colors.primary`};\n      ${tw`mt-2`}\n    }\n\n    @media (min-width: 1024px) {\n      .number-change-value {\n        font-size: 20px;\n      }\n    }\n  `,\n]);\nconst FlexLayout = tw.div`flex flex-col items-center justify-center w-full`;\nconst Title = tw(Text)`text-base uppercase`;\nconst Value = tw(Text)`text-xl text-primary! font-bold mt-2`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport { TableRow, TableCell } from \"src/app/components/Table\";\nimport { Star } from \"./TokenTransactionTable\";\nimport { NumberChange } from \"src/app/components/NumberChange\";\n\nexport function TableBodyRows({ item }) {\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          <Star>⭑</Star>\n        </TableCell>\n        <TableCell>Token 1</TableCell>\n        <TableCell>TK1</TableCell>\n        <TableCell>100,000</TableCell>\n        <TableCell>$1,197.72/ TK1</TableCell>\n        <TableCell>\n          <NumberChange diff=\"25%\"/>\n        </TableCell>\n        <TableCell>100,000</TableCell>\n        <TableCell>100,000,000</TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nTableBodyRows.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport tw, { styled, css, theme } from \"twin.macro\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport {\n  Table,\n  TableContainer,\n  TableRow,\n  TableHeader,\n  TableHeaderCell,\n  TableBody,\n} from \"src/app/components/Table\";\nimport { TableBodyRows } from \"./TableBodyRows\";\nimport { Empty } from \"src/app/components/Empty\";\nimport { Pagination } from \"src/app/components/Pagination\";\n\nimport { CardLayout } from \"../CardLayout\";\nimport { Text } from \"src/app/components/Text\";\n\nconst headerConfig = [\n  \"⭑\",\n  \"Token Name\",\n  \"Symbol\",\n  \"Quantity\",\n  \"Token Price\",\n  \"Change (24h)\",\n  \"Value in GLCH\",\n  \"Value in USD\",\n];\n\nexport function TokenTransactionTable({ data }) {\n  const { t } = useTranslation();\n  const isDataEmpty = !data?.length;\n\n  const renderHeaders = () => {\n    return headerConfig.map((item, i) => (\n      <TableHeaderCell key={`token-transactions-header-${i}`}>\n        {i === 0 ? <Star>{item}</Star> : item}\n      </TableHeaderCell>\n    ));\n  };\n\n  const renderBodyRows = () => {\n    if (isDataEmpty) return <Empty />;\n\n    return data.map((item, i) => {\n      return <TableBodyRows item={item} key={`token-transactions-body-${i}`} />;\n    });\n  };\n\n  const renderPagination = () => {\n    if (isDataEmpty) return null;\n    return <Pagination />;\n  };\n\n  return (\n    <div tw=\"mt-7\">\n      <CardLayout tw=\"block py-0 px-1\">\n        <TableContainer>\n          <Table tw=\"bg-bgSecondary\">\n            <TableHeader>\n              <TableRow>{renderHeaders()}</TableRow>\n            </TableHeader>\n            <TableBody tw=\"bg-bgSecondary\">{renderBodyRows()}</TableBody>\n          </Table>\n        </TableContainer>\n      </CardLayout>\n      {renderPagination()}\n    </div>\n  );\n}\n\nexport const Star = tw(Text)`text-2xl text-textSecondary!`;\n","import React from \"react\";\nimport tw from \"twin.macro\";\n\n// Components\nimport { InfoGlitchTokenCard } from \"./InfoGlitchTokenCard\";\nimport { ValueTokenCard } from \"./ValueTokenCard\";\nimport { TokenTransactionTable } from \"./TokenTransactionTable\";\n\nexport function AssetManagement() {\n  return (\n    <Wrapper>\n      <InfoGlitchTokenCard />\n      <ValueTokenCard />\n      <TokenTransactionTable data={[1, 2, 3]} />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = tw.div`lg:(pt-1 px-3)`;\n","import React from \"react\";\nimport tw, { styled, css, theme } from \"twin.macro\";\n\n// Components\nimport { Button } from \"src/app/components/Button\";\nimport { Text } from \"../Text\";\n\nexport function TokenButton(props) {\n  const { isActive, ...rest } = props;\n  return (\n    <Wrapper isActive={isActive} {...rest}>\n      <div tw=\"w-full\">\n        <Text className=\"token-name\" tw=\"text-base font-bold\">\n          100,000 Token 1\n        </Text>\n        <Text className=\"number-tokens\" tw=\"mt-2\">\n          $3,000,000\n        </Text>\n      </div>\n    </Wrapper>\n  );\n}\n\nexport const Wrapper = styled(Button)(({ isActive }) => [\n  tw`py-4 px-0`,\n\n  css`\n    background-color: ${theme`colors.bg1`};\n  `,\n\n  isActive &&\n    css`\n      background-color: ${theme`colors.primary`};\n\n      .token-name,\n      .number-tokens {\n        color: ${theme`colors.textPrimary`} !important;\n      }\n    `,\n]);\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"twin.macro\";\n\n// Components\nimport { AddCircleIcon } from \"src/app/components/Svg/Icons\";\nimport { Wrapper as TokenButtonWrapper } from \"./TokenButton\";\nimport { Text } from \"../Text\";\n\nexport function AddTokenButton(props) {\n  const { t } = useTranslation();\n  const { ...rest } = props;\n\n  return (\n    <TokenButtonWrapper tw=\"py-3.5\" {...rest}>\n      <div tw=\"flex items-center\">\n        <AddCircleIcon />\n        <Text tw=\"ml-3\">{t(\"walletPage.add_token\")}</Text>\n      </div>\n    </TokenButtonWrapper>\n  );\n}\n","import React from \"react\";\nimport tw, { styled, css, theme } from \"twin.macro\";\n\n// Components\nimport { Avatar } from \"src/app/components/Avatar\";\nimport { Tag } from \"src/app/components/Tag\";\nimport { Text } from \"../Text\";\n\nexport const TransactionItem = ({ transaction }) => {\n  return (\n    <StyledTransaction>\n      <div tw=\"lg:flex items-center justify-between\">\n        <Avatar\n          tw=\"items-center justify-center\"\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTMx1itTXTXLB8p4ALTTL8mUPa9TFN_m9h5VQ&usqp=CAU\"\n          width={50}\n        />\n\n        <div tw=\"flex flex-col items-center mt-3 lg:mt-0 lg:items-start lg:ml-6\">\n          <Text tw=\"text-base text-white! font-bold\">Sent Glitch</Text>\n          <Text tw=\"mt-1\">#1 - 01/01/2021</Text>\n        </div>\n      </div>\n\n      <div tw=\"flex items-center justify-center\">\n        <Tag tw=\"my-2 lg:my-0\" color=\"pending\">\n          Pending\n        </Tag>\n      </div>\n\n      <Text tw=\"mt-1 text-center\">Complete in ~ 10 mins</Text>\n\n      <div tw=\"text-center mt-2 lg:text-right\">\n        <Text tw=\"text-base text-white! font-bold\">- $2,100 USD</Text>\n        <Text tw=\"mt-1\">3 GLCH</Text>\n      </div>\n    </StyledTransaction>\n  );\n};\n\nconst StyledTransaction = styled.div(() => [\n  tw`w-full lg:flex items-center justify-between py-6 last:border-none`,\n  css`\n    border-bottom: 1px solid rgba(255, 255, 255, 0.11);\n  `,\n]);\n","import React from \"react\";\n\n// Components\nimport { TransactionItem } from \"./TransactionItem\";\n\nexport const Transactions = () => {\n  return (\n    <>\n      {[1, 2, 3, 4].map((transaction) => {\n        return <TransactionItem key={transaction} transaction={transaction} />;\n      })}\n    </>\n  );\n};\n","import React from \"react\";\nimport tw from \"twin.macro\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport { Heading } from \"../Heading\";\nimport { CardLayout } from \"../CardLayout\";\nimport { Transactions } from \"./Transactions\";\n\nexport const PendingCard = () => {\n  const { t } = useTranslation();\n\n  const renderTransactions = () => {\n    return <Transactions />;\n  };\n\n  return (\n    <Wrapper>\n      <Heading>{t(\"common.pending\")} (3)</Heading>\n      <CardLayout tw=\"py-0\">{renderTransactions()}</CardLayout>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = tw.div`mt-10`;\n","import React from \"react\";\nimport tw from \"twin.macro\";\n\n// Components\nimport { Heading } from \"../Heading\";\nimport { CardLayout } from \"../CardLayout\";\nimport { Transactions } from \"./Transactions\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const HistoryCard = () => {\n  const { t } = useTranslation();\n\n  const renderTransactions = () => {\n    return <Transactions />;\n  };\n\n  return (\n    <Wrapper>\n      <Heading>{t(\"common.history\")}</Heading>\n      <CardLayout tw=\"py-0\">{renderTransactions()}</CardLayout>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = tw.div`mt-10`;\n","import React from \"react\";\nimport tw from \"twin.macro\";\n\nimport { Grid } from \"src/app/components/Grid\";\nimport { TokenButton } from \"./TokenButton\";\nimport { AddTokenButton } from \"./AddTokenButton\";\nimport { PendingCard } from \"./PendingCard\";\nimport { HistoryCard } from \"./HistoryCard\";\n\nexport function History() {\n  const renderToken = () => {\n    return [1, 2, 3, 4].map((token) => {\n      return <TokenButton isActive={token === 1} key={token} />;\n    });\n  };\n\n  const renderAddToken = () => {\n    return <AddTokenButton />;\n  };\n\n  return (\n    <Wrapper>\n      <Grid cols={4}>\n        {renderToken()}\n        {renderAddToken()}\n      </Grid>\n\n      <PendingCard />\n      <HistoryCard />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = tw.div`lg:p-3`;\n","import React from \"react\";\nimport { styled, css, theme } from \"twin.macro\";\nimport { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst StyledSVG = styled.svg(({ size, stroke }) => [\n  css`\n    animation: 2s ${rotate} linear infinite;\n    height: ${size};\n    width: ${size};\n    path {\n      stroke: ${stroke ?? theme`colors.primary`} };\n    }\n  `,\n]);\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport function Spinner({ size = \"14px\", stroke, ...rest }) {\n  return (\n    <StyledSVG\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      size={size}\n      stroke={stroke}\n      {...rest}\n    >\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  );\n}\n","import React from \"react\";\nimport tw, { styled, css, theme } from \"twin.macro\";\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport { Button } from \"src/app/components/Button\";\nimport { Text } from \"src/app/components/Text\";\nimport { Spinner } from \"src/app/components/LoadingIndicator/Spinner\";\n\nexport function WalletButton({ pendingConnectorId, wallet, onClick }) {\n  const { t } = useTranslation();\n  const { name, connectorId } = wallet || {};\n  const isPending = pendingConnectorId === connectorId;\n\n  const PendingView = () => (\n    <>\n      <Spinner tw=\"mr-3\" />\n      <Text tw=\"text-primary! text-sm\">{t(\"walletPage.initializing\")}</Text>\n    </>\n  );\n\n  return (\n    <StyledWalletButton onClick={onClick} disabled={isPending}>\n      {isPending ? PendingView() : <Text tw=\"text-primary!\">{name}</Text>}\n    </StyledWalletButton>\n  );\n}\n\nconst StyledWalletButton = styled(Button)(() => [\n  tw`p-6`,\n  css`\n    background-color: ${theme`colors.bg1`};\n  `,\n]);\n\nWalletButton.propTypes = {\n  wallet: PropTypes.object,\n  onClick: PropTypes.func,\n};\n","import React, { useState } from \"react\";\nimport tw from \"twin.macro\";\nimport { useTranslation } from \"react-i18next\";\nimport { SupportedWallets } from \"src/constants/wallet\";\nimport { useWalletAuth } from \"src/hooks/wallet\";\n\n// Components\nimport { Text } from \"src/app/components/Text\";\nimport { Grid } from \"src/app/components/Grid\";\nimport { WalletButton } from \"./WalletButton\";\n\nexport function Wallets() {\n  const { t } = useTranslation();\n  const { active, account, login, logout } = useWalletAuth();\n  const [pendingConnectorId, setPendingConnectorId] = useState(null);\n\n  const renderWallet = () => {\n    return SupportedWallets.map((wallet, key) => {\n      const { connectorId, href } = wallet;\n\n      const onWalletClick = () => {\n        if (!href) {\n          setPendingConnectorId(connectorId);\n          login(connectorId, () => {\n            setPendingConnectorId(null);\n          });\n        }\n      };\n\n      return (\n        <WalletButton\n          pendingConnectorId={pendingConnectorId}\n          key={key}\n          wallet={wallet}\n          onClick={onWalletClick}\n        />\n      );\n    });\n  };\n\n  return (\n    <Wrapper>\n      <Text tw=\"text-lg font-bold\">{t(\"walletPage.connect_to_wallet\")}</Text>\n      {/* For testing */}\n      <Text tw=\"mt-3 text-base font-bold\">Your Address: {account}</Text>\n      <Text onClick={logout} tw=\"mt-3 text-base font-bold cursor-pointer\">\n        Logout\n      </Text>\n\n      {!active && (\n        <Grid cols={4} tw=\"mt-6 lg:(mt-3 p-3)\">\n          {renderWallet()}\n        </Grid>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = tw.div`w-full text-center`;\n","import React from \"react\";\n\nimport { walletTabConfig } from \"src/constants/walletTabConfig\";\n\n// Components\nimport {\n  Tabs,\n  Tab,\n  TabPanel,\n  TabContainer,\n} from \"src/app/components/Tab/Vertical\";\nimport { AccountManagement } from \"./AccountManagement\";\nimport { AssetManagement } from \"./AssetManagement\";\nimport { History } from \"./History\";\nimport { Wallets } from \"./Wallets\";\n\nexport function TabSections() {\n  const renderTab = () => {\n    return walletTabConfig.map((tab, tabIndex) => {\n      return (\n        <Tab key={tabIndex} leftIcon={tab.icon}>\n          {tab?.label}\n        </Tab>\n      );\n    });\n  };\n\n  return (\n    <TabContainer orientation=\"vertical\">\n      <Tabs>{renderTab()}</Tabs>\n\n      <TabPanel>\n        <AccountManagement />\n      </TabPanel>\n\n      <TabPanel>\n        <AssetManagement />\n      </TabPanel>\n\n      <TabPanel>\n        <History />\n      </TabPanel>\n\n      <TabPanel>\n        <Wallets />\n      </TabPanel>\n    </TabContainer>\n  );\n}\n","import React from \"react\";\n\n// Components\nimport { TabSections } from \"./components/TabSections\";\n\nexport function WalletPage() {\n  return (\n    <>\n      <TabSections />\n    </>\n  );\n}\n","import { React } from \"react\";\nimport tw from \"twin.macro\";\n\nexport function Empty() {\n  return <Wrapper></Wrapper>;\n}\n\nconst Wrapper = tw.div`p-10 items-center justify-center`;\n","import tw from \"twin.macro\";\nimport { Card as CardBase } from \"src/app/components/Card\";\n\nexport const CardLayout = tw(CardBase)`bg-bgSecondary py-4 lg:px-10 flex-col`;\n","import React from \"react\";\nimport RcPagination from \"rc-pagination\";\nimport { useTranslation } from \"react-i18next\";\nimport tw from \"twin.macro\";\nimport \"./styles/index.css\";\n\nexport const Pagination = ({ containerStyles }) => {\n  const { t } = useTranslation();\n\n  /**\n   *\n   *\n   */\n  const renderButtons = (_, type, element) => {\n    if (type === \"prev\") {\n      return <button type=\"button\">{t(\"pagination.prev\")}</button>;\n    }\n    if (type === \"next\") {\n      return <button type=\"button\">{t(\"pagination.next\")}</button>;\n    }\n    return element;\n  };\n\n  return (\n    <>\n      <Wrapper css={containerStyles}>\n        <RcPagination total={100} itemRender={renderButtons} />\n      </Wrapper>\n    </>\n  );\n};\n\nconst Wrapper = tw.div`\n flex \n mt-7\n mb-2\n items-center \n justify-start \n lg:justify-end \n w-full\n`;\n","export const Types = {\n  success: \"success\",\n  pending: \"pending\",\n  default: \"default\",\n  processing: \"processing\",\n};\n","import { theme } from \"twin.macro\";\nimport { Types } from \"./types\";\n\nexport const getColor = (type) => {\n  if (type === Types.success) {\n    return theme`colors.success`;\n  }\n\n  if (type === Types.pending) {\n    return theme`colors.pending`;\n  }\n\n  if (type === Types.processing) {\n    return theme`colors.info`;\n  }\n\n  return theme`colors.success`;\n};\n","import React from \"react\";\nimport tw from \"twin.macro\";\nimport PropTypes from \"prop-types\";\n\nexport function Grid({ children, cols, ...props }) {\n  return (\n    <div css={styles.container({ cols })} {...props}>\n      {children}\n    </div>\n  );\n}\n\nconst styles = {\n  container: ({ cols }) => [tw`grid gap-4 lg:gap-6`, colsVariants[cols]],\n};\n\nconst colsVariants = {\n  2: tw`grid-cols-1 lg:grid-cols-2`,\n  3: tw`grid-cols-2 md:grid-cols-3`,\n  4: tw`grid-cols-1 md:grid-cols-2 lg:grid-cols-4`,\n};\n\nGrid.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n  cols: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","import React from \"react\";\nimport tw from \"twin.macro\";\n\nexport function Card({ children, ...props }) {\n  return <Wrapper {...props}>{children}</Wrapper>;\n}\n\nconst Wrapper = tw.div`flex p-5 rounded items-center bg-bgPrimary`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw, { css, styled, theme } from \"twin.macro\";\nimport { Text } from \"../Text\";\nimport { getColor } from \"./utils\";\nimport { Types } from \"./types\";\n\nexport function Tag(props) {\n  const { children, color, ...rest } = props;\n  return (\n    <Wrapper color={color} {...rest}>\n      <Text bold size={theme`fontSize.sm`} tw=\"text-center\">\n        {children}\n      </Text>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div(({ color }) => [\n  tw`px-3 py-1 rounded items-center justify-center`,\n  css`\n    background-color: ${getColor(color)};\n  `,\n]);\n\nTag.propTypes = {\n  color: PropTypes.string,\n};\n\nTag.defaultProps = {\n  color: Types.default,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw, { theme } from \"twin.macro\";\n\n// Components\nimport { Text } from \"src/app/components/Text\";\nimport { UpDownIcon } from \"src/app/components/Svg/Icons\";\n\nexport function NumberChange({ value, diff, ...props }) {\n  return (\n    <Wrapper {...props}>\n      <Text className=\"number-change-value\">{value}</Text>\n      {diff && <UpDownIcon isUp />} {/* Up or down */}\n      {diff && (\n        <Text\n          size={theme`fontSize.sm`}\n          color={theme`colors.primary`}\n          className=\"number-change-diff\"\n        >\n          {diff}\n        </Text>\n      )}\n    </Wrapper>\n  );\n}\n\nNumberChange.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  diff: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nconst Wrapper = tw.div`flex items-center`;\n","import React, { cloneElement, isValidElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw from \"twin.macro\";\n\n// Components\nimport { InfoIcon } from \"src/app/components/Svg/Icons\";\nimport { Text as TextBase } from \"src/app/components/Text\";\n\nexport function InfoRow(props) {\n  const { label, labelWrapStyles, value, customValueComp, ...rest } = props;\n\n  const renderValue = () => {\n    if (isValidElement(customValueComp)) {\n      return cloneElement(customValueComp);\n    }\n\n    return <Text>{value}</Text>;\n  };\n\n  return (\n    <Container {...rest}>\n      <InfoIcon />\n      <Content className=\"info-row-content\">\n        <LabelWrapper css={[labelWrapStyles]}>\n          <Text tw=\"mb-1 lg:mb-0\">{label}:</Text>\n        </LabelWrapper>\n        {renderValue()}\n      </Content>\n    </Container>\n  );\n}\n\nconst Container = tw.div`mt-6 first:mt-0 flex w-full lg:items-center`;\nconst Content = tw.div`flex flex-col ml-2 lg:flex-grow lg:flex-row lg:ml-6`;\nconst LabelWrapper = tw.div`flex items-start lg:(items-center w-2/12)`;\nconst Text = tw(TextBase)`text-base text-textSecondary`;\n\nInfoRow.propTypes = {\n  label: PropTypes.string,\n  labelWrapStyles: PropTypes.any,\n  contentStyles: PropTypes.object,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  customValueComp: PropTypes.element,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw, { theme, styled, css } from \"twin.macro\";\nimport { ImageLink } from \"../Image\";\n\nexport function Avatar({ href, src, alt, width, height, ...props }) {\n  return (\n    <Wrapper\n      width={width}\n      height={height}\n      {...props}>\n      <div className=\"ring\">\n        <ImageLink\n          href={href}\n          src={src}\n          alt={alt}\n          {...props}\n        />\n      </div>\n    </Wrapper>\n  );\n}\n\nImageLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nconst Wrapper = styled.div.attrs(props => ({\n  // we can define static props\n  className: 'glc-avatar ' + (props.className ? props.className : ''),\n}))`\n  display: flex;\n  .ring {\n    width: ${props => props.width ? props.width + 'px' : 'auto' };\n    height: ${props => props.height ? props.height + 'px' : 'auto' };\n    position: relative;\n    &:before {\n      content: '';\n      position: absolute;\n      z-index: 1;\n      border: 2px solid ${theme`colors.secondary`};\n      width: 100%;\n      height: 100%;\n      top: -2px;\n      left: -1px;\n      border-radius: 50%;\n    }\n    &:after {\n      content: '';\n      position: absolute;\n      z-index: 0;\n      border: 2px solid ${theme`colors.primary`};\n      width: 100%;\n      height: 100%;\n      top: -2px;\n      left: -2px;\n      border-radius: 50%;\n    }\n    img {\n      width: 100%;\n      height: auto;\n      border-radius: 50%;\n    }\n    a {\n      box-sizing: border-box;\n      border: 2px solid ${theme`colors.white`};\n      border-radius: 50%;\n      line-height: 0;\n      padding: 5px;\n      position: relative;\n      z-index: 2;\n    }\n  }\n`;\n","import React from \"react\";\nimport tw from \"twin.macro\";\nimport PropTypes from \"prop-types\";\n\nexport function Tabs({ children, ...props }) {\n  return (\n    <Container {...props}>\n      <Wrapper>{children}</Wrapper>\n    </Container>\n  );\n}\n\nconst Container = tw.div`relative lg:(w-1/4 min-w-1/4 pr-9)`;\nconst Wrapper = tw.div`\n flex \n overflow-auto \n lg:overflow-hidden \n whitespace-nowrap \n rounded-t \n lg:(block rounded-b bg-bgPrimary whitespace-normal)\n`;\n\nTabs.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n","import tw, { styled, css, theme } from \"twin.macro\";\nimport { Button } from \"../../Button\";\n\nexport const StyledTab = styled(Button)(\n  ({\n    isActive,\n    tabStyles: {\n      label: { color, activeColor, size },\n    },\n  }) => [\n    tw`\n      w-full\n      py-2.5\n      lg:py-3\n    `,\n\n    css`\n      background-color: ${isActive\n        ? theme`colors.bg5`\n        : theme`colors.bgPrimary`};\n      border-radius: 5px;\n      margin-right: 5px;\n\n      .tab-label {\n        color: ${isActive\n          ? activeColor || theme`colors.primary`\n          : theme`colors.textSecondary`} !important;\n        font-size: ${size || theme`fontSize.base`};\n        font-weight: ${isActive ? 700 : \"normal\"};\n      }\n    `,\n\n    isActive &&\n      css`\n        svg path {\n          fill: ${theme`colors.primary`};\n        }\n\n        .wallet-icon path {\n          stroke: ${theme`colors.primary`};\n          fill: none;\n        }\n\n        .wallet-icon path:last-child {\n          stroke: none;\n          fill: ${theme`colors.primary`};\n        }\n\n        @media (min-width: 1024px) {\n          &:after {\n            content: \"\";\n            display: block;\n            position: absolute;\n            right: 0;\n            width: 0;\n            height: 0;\n            border-top: 10px solid transparent;\n            border-right: 20px solid ${theme`colors.bgPrimary`};\n            border-bottom: 10px solid transparent;\n          }\n        }\n      `,\n  ]\n);\n","import React, { cloneElement, isValidElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport tw from \"twin.macro\";\n\nimport { Text } from \"../../Text\";\nimport { StyledTab } from \"./StyledTab\";\nimport { useTabState } from \"../hooks/useTabState\";\n\nexport function Tab(props) {\n  const { children, tabStyles, leftIcon, onClick, ...rest } = props;\n  const { isActive, onChangeTab } = useTabState();\n\n  return (\n    <StyledTab\n      isActive={isActive}\n      tabStyles={tabStyles}\n      onClick={() => {\n        onChangeTab();\n        onClick && onClick();\n      }}\n      {...rest}\n    >\n      <LabelWrapper>\n        {isValidElement(leftIcon) && (\n          <LeftIconWrapper>{cloneElement(leftIcon)}</LeftIconWrapper>\n        )}\n        <Text className=\"tab-label\" tw=\"flex-grow w-full text-left\">\n          {children}\n        </Text>\n      </LabelWrapper>\n    </StyledTab>\n  );\n}\n\nconst LabelWrapper = tw.div`flex items-center w-full`;\nconst LeftIconWrapper = tw.div`w-1/4 mr-3`;\nTab.propTypes = {\n  children: PropTypes.any,\n  leftIcon: PropTypes.element,\n  tabStyles: PropTypes.shape({\n    label: PropTypes.shape({\n      color: PropTypes.string,\n      activeColor: PropTypes.string,\n      size: PropTypes.string,\n    }),\n  }),\n  onClick: PropTypes.func,\n};\n\nTab.defaultProps = {\n  tabStyles: {\n    label: {},\n  },\n};\n","import React from \"react\";\nimport { theme, styled, css } from \"twin.macro\";\nimport { usePanelState } from \"../hooks/usePanelState\";\n\nexport function TabPanel({ children, isCard, ...props }) {\n  const { isActive } = usePanelState();\n\n  if (!isCard && !isActive) return null;\n\n  return (\n    <Wrapper {...props}>\n      <div className=\"tab-panel\">{children}</div>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div(() => [\n  css`\n    background-color: ${theme`colors.bgPrimary`};\n    padding: 20px;\n    border-radius: 0px 0px 5px 5px;\n    max-width: 100%;\n\n    .tab-panel {\n      min-height: 45vh;\n    }\n\n    @media (min-width: 1024px) {\n      width: 100%;\n      border-radius: 5px;\n\n      .tab-panel {\n        min-height: 65vh;\n      }\n    }\n  `,\n]);\n"],"sourceRoot":""}